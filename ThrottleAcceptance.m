function [throttleAcceptance, throttleAcceptanceSmooth] = ThrottleAcceptance(run, gLat, time)
% ThrottleAcceptance Returns a list of percentages for the throttle
% acceptance for each maximum or minimum in gLat. 

% This code should find gLat maximums (max corner G's, hypothetically) then
% find the next point in time where the throttle is at 100% (>99) and
% compare the g-forces. A higher percent means more aggressive (faster on
% throttle) driving. 

% Smooth input data
smoothedData = smoothdata(gLat,"movmean","SmoothingFactor",0.25,...
    "SamplePoints",time);

% Find local maxima and minima
maxIndices = islocalmax(smoothedData,"MinProminence",1,"SamplePoints",time);
minIndices = islocalmin(smoothedData,"MinProminence",1,"SamplePoints",time);

extremaIndicies = find((maxIndices + minIndices) == 1); % Should never add 
% to 2 because you can't have a max and min at the same point
nextOpenThrottles = zeros(size(extremaIndicies));
for i = 1:size(extremaIndicies)
    turnTime = time(extremaIndicies(i));
    nextOpenThrottles(i) = find(run.ThrottlePos > 99 & time > turnTime,1);
end
throttleAcceptance = 100 * (abs(gLat(nextOpenThrottles)) ./ ...
    abs(gLat(extremaIndicies)));
throttleAcceptanceSmooth = 100 * ((smoothedData(nextOpenThrottles)) ./ ...
    (smoothedData(extremaIndicies)));

plot(time, gLat, time, smoothedData, time, run.ThrottlePos / 100)
legend("gLat", "Smoothed gLat", "Throttle Position")

end

% Display results of smoothing (Autogenerated)
% figure
% plot(time,gLat,"Color",[77 190 238]/255,"DisplayName","Input data")
% hold on
% plot(time,smoothedData,"Color",[0 114 189]/255,"LineWidth",1.5,...
%     "DisplayName","Smoothed data")
% hold off
% legend
% xlabel("time")
%

% % Display results of min/max finding (Autogenerated)
% figure
% plot(time,smoothedData,"Color",[77 190 238]/255,"DisplayName","Input data")
% hold on
% 
% % Plot local maxima
% plot(time(maxIndices),smoothedData(maxIndices),"^","Color",[217 83 25]/255,...
%     "MarkerFaceColor",[217 83 25]/255,"DisplayName","Local maxima")
% 
% % Plot local minima
% plot(time(minIndices),smoothedData(minIndices),"v","Color",[237 177 32]/255,...
%     "MarkerFaceColor",[237 177 32]/255,"DisplayName","Local minima")
% title("Number of extrema: " + (nnz(maxIndices)+nnz(minIndices)))
% hold off
% legend
% xlabel("time")
